akka {
  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = [
        "jdbc-journal"
      ]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = [
        "jdbc-snapshot-store"
      ]
    }
  }

  projection {
    jdbc {
      dialect = "postgres-dialect"
      blocking-jdbc-dispatcher.thread-pool-executor.fixed-pool-size = ${slick.db.numThreads}
    }
  }

  http {
    cors {
      allow-generic-http-requests = off
      allowed-origins = [
        "http://localhost:4200"
      ]
      allowed-methods = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
    }
  }
}

jdbc-journal {
  slick = ${slick}
}

jdbc-snapshot-store {
  slick = ${slick}
}

jdbc-read-journal {
  slick = ${slick}
}

jdbc-durable-state-store {
  slick = ${slick}
}

slick {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    host = "localhost"
    host = ${?DB_HOST}
    port = 5432
    name = "easypay"
    user = "easypay"
    password = "easypay"
    url = "jdbc:postgresql://"${slick.db.host}":"${slick.db.port}"/"${slick.db.name}"?reWriteBatchedInserts=true"
    driver = "org.postgresql.Driver"
    numThreads = 5
    maxConnections = 5
    minConnections = 1
  }
}

http {
  address = "0.0.0.0"
  port = 9000
}

timeouts {
  ask = "30s"
}